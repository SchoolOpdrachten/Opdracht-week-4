// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace src.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220923132927_vrijdag")]
    partial class vrijdag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("Attractie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Attracties");
                });

            modelBuilder.Entity("Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gebruikers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Gebruiker");
                });

            modelBuilder.Entity("Onderhoud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Probleem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Onderhoud");
                });

            modelBuilder.Entity("Reservering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttractieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GastId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AttractieId");

                    b.HasIndex("GastId");

                    b.ToTable("Reserveringen");
                });

            modelBuilder.Entity("Gast", b =>
                {
                    b.HasBaseType("Gebruiker");

                    b.Property<int?>("BegeleiderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EersteBezoek")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HeeftFavorieteAttractieId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("BegeleiderId");

                    b.HasIndex("HeeftFavorieteAttractieId");

                    b.HasDiscriminator().HasValue("Gast");
                });

            modelBuilder.Entity("Medewerker", b =>
                {
                    b.HasBaseType("Gebruiker");

                    b.Property<int?>("OnderhoudId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OnderhoudId1")
                        .HasColumnType("INTEGER");

                    b.HasIndex("OnderhoudId");

                    b.HasIndex("OnderhoudId1");

                    b.HasDiscriminator().HasValue("Medewerker");
                });

            modelBuilder.Entity("Reservering", b =>
                {
                    b.HasOne("Attractie", "Attractie")
                        .WithMany()
                        .HasForeignKey("AttractieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gast", "Gast")
                        .WithMany("Reserveringen")
                        .HasForeignKey("GastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DateTimeBereik", "Tijd", b1 =>
                        {
                            b1.Property<int>("ReserveringId")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("Begin")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Eind")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ReserveringId");

                            b1.ToTable("Reserveringen");

                            b1.WithOwner()
                                .HasForeignKey("ReserveringId");
                        });

                    b.Navigation("Attractie");

                    b.Navigation("Gast");

                    b.Navigation("Tijd")
                        .IsRequired();
                });

            modelBuilder.Entity("Gast", b =>
                {
                    b.HasOne("Gast", "Begeleider")
                        .WithMany()
                        .HasForeignKey("BegeleiderId");

                    b.HasOne("Attractie", "HeeftFavorieteAttractie")
                        .WithMany()
                        .HasForeignKey("HeeftFavorieteAttractieId");

                    b.Navigation("Begeleider");

                    b.Navigation("HeeftFavorieteAttractie");
                });

            modelBuilder.Entity("Medewerker", b =>
                {
                    b.HasOne("Onderhoud", null)
                        .WithMany("Coordinaat")
                        .HasForeignKey("OnderhoudId");

                    b.HasOne("Onderhoud", null)
                        .WithMany("Doet")
                        .HasForeignKey("OnderhoudId1");
                });

            modelBuilder.Entity("Onderhoud", b =>
                {
                    b.Navigation("Coordinaat");

                    b.Navigation("Doet");
                });

            modelBuilder.Entity("Gast", b =>
                {
                    b.Navigation("Reserveringen");
                });
#pragma warning restore 612, 618
        }
    }
}
