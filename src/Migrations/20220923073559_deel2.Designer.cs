// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace src.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220923073559_deel2")]
    partial class deel2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("Attractie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Attracties");
                });

            modelBuilder.Entity("DateTimeBereik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Begin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Eind")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DateTimeBereik");
                });

            modelBuilder.Entity("Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gebruikers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Gebruiker");
                });

            modelBuilder.Entity("MedewerkerMedewerker", b =>
                {
                    b.Property<int>("CoordinaatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoordinaatId", "DoetId");

                    b.HasIndex("DoetId");

                    b.ToTable("MedewerkerMedewerker");
                });

            modelBuilder.Entity("Onderhoud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Probleem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Onderhouds");
                });

            modelBuilder.Entity("Reservering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttractieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GastId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TijdId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AttractieId");

                    b.HasIndex("GastId");

                    b.HasIndex("TijdId");

                    b.ToTable("Reserveringen");
                });

            modelBuilder.Entity("Gast", b =>
                {
                    b.HasBaseType("Gebruiker");

                    b.Property<int?>("BegeleidId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EersteBezoek")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HeeftFavorieteAttractieId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("BegeleidId");

                    b.HasIndex("HeeftFavorieteAttractieId");

                    b.HasDiscriminator().HasValue("Gast");
                });

            modelBuilder.Entity("Medewerker", b =>
                {
                    b.HasBaseType("Gebruiker");

                    b.Property<int?>("OnderhoudId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OnderhoudId1")
                        .HasColumnType("INTEGER");

                    b.HasIndex("OnderhoudId");

                    b.HasIndex("OnderhoudId1");

                    b.HasDiscriminator().HasValue("Medewerker");
                });

            modelBuilder.Entity("MedewerkerMedewerker", b =>
                {
                    b.HasOne("Medewerker", null)
                        .WithMany()
                        .HasForeignKey("CoordinaatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Medewerker", null)
                        .WithMany()
                        .HasForeignKey("DoetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Reservering", b =>
                {
                    b.HasOne("Attractie", "Attractie")
                        .WithMany()
                        .HasForeignKey("AttractieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gast", "Gast")
                        .WithMany("Reserveringen")
                        .HasForeignKey("GastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DateTimeBereik", "Tijd")
                        .WithMany()
                        .HasForeignKey("TijdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attractie");

                    b.Navigation("Gast");

                    b.Navigation("Tijd");
                });

            modelBuilder.Entity("Gast", b =>
                {
                    b.HasOne("Gast", "Begeleid")
                        .WithMany()
                        .HasForeignKey("BegeleidId");

                    b.HasOne("Attractie", "HeeftFavorieteAttractie")
                        .WithMany()
                        .HasForeignKey("HeeftFavorieteAttractieId");

                    b.Navigation("Begeleid");

                    b.Navigation("HeeftFavorieteAttractie");
                });

            modelBuilder.Entity("Medewerker", b =>
                {
                    b.HasOne("Onderhoud", null)
                        .WithMany("Coordinaat")
                        .HasForeignKey("OnderhoudId");

                    b.HasOne("Onderhoud", null)
                        .WithMany("Doet")
                        .HasForeignKey("OnderhoudId1");
                });

            modelBuilder.Entity("Onderhoud", b =>
                {
                    b.Navigation("Coordinaat");

                    b.Navigation("Doet");
                });

            modelBuilder.Entity("Gast", b =>
                {
                    b.Navigation("Reserveringen");
                });
#pragma warning restore 612, 618
        }
    }
}
